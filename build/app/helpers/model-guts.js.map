{"version":3,"sources":["../../../app/helpers/model-guts.js"],"names":["module","exports","knex","name","tableName","selectableProps","timeout","parseInt","process","env","DB_TIMEOUT","Paginator","total","limit","offset","dataLength","page","from","to","lastPage","Math","ceil","rawQueryBuilder","queryBuilder","select","filteredQueryBuilder","filters","knexQb","filterKey","where","paginateQuery","query","count","data","clone","as","first","length","paginator","create","props","id","insert","returning","into","findAll","find","findOne","then","results","Array","isArray","findById","update","destroy","del"],"mappings":"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","sourcesContent":["'use strict'\n\n// The guts of a model that uses Knexjs to store and retrieve data from a\n// database using the provided `knex` instance. Custom functionality can be\n// composed on top of this set of common guts.\n//\n// The idea is that these are the most-used types of functions that most/all\n// \"models\" will want to have. They can be overriden/modified/extended if\n// needed by composing a new object out of the one returned by this function ;)\nmodule.exports = ({\n  knex = {},\n  name = 'name',\n  tableName = 'tablename',\n  selectableProps = [],\n  timeout = parseInt(process.env.DB_TIMEOUT) || 5\n}) => {\n  class Paginator {\n    constructor(total,limit,offset,dataLength,page) {\n        this.total = parseInt(total);\n        this.dataLength = dataLength,\n        this.limit = limit;\n        this.offset = offset;\n        this.from = offset + 1;\n        this.to = offset + dataLength;\n        this.page = page;\n        this.lastPage = Math.ceil(total / limit);\n    }\n  }\n\n  const rawQueryBuilder = function(){\n    return knex('scratch_card')\n    .timeout(timeout);\n  }\n\n  const queryBuilder = function(selectableProps=selectableProps){\n    return knex.select(selectableProps)\n    .from(tableName)\n    .timeout(timeout);\n  }\n\n  const filteredQueryBuilder = function(filters = {},selectableProps=selectableProps){\n    let knexQb = knex.select(selectableProps)\n    .from(tableName)\n    .timeout(timeout);\n\n    for(let filterKey in filters){\n      knexQb.where(filterKey,filters[filterKey]);\n    }\n\n    return knexQb;\n  }\n\n  const paginateQuery = async function(knexQb,query, count = false){\n\n    const limit = parseInt(query.limit) || 200;\n    const page = parseInt(query.page) || 1;\n\n    const offset = (page - 1) * limit\n    let data = null;\n    let total = null;\n    if(count){\n      total = ( await knex.count('* as total').from(knexQb.clone().as('inner')).first() ).total;\n      data = await knexQb.offset(offset).limit(limit)    \n    }\n    else {\n        data = await knexQb.offset(offset).limit(limit)\n        total = data.length\n    }\n\n    return {\n        paginator: new Paginator(total,limit,offset,data.length,page),\n        data\n    };\n\n}\n\nconst create = props => {\n  delete props.id // not allowed to set `id`\n\n  return knex.insert(props)\n    .returning(selectableProps)\n    .into(tableName)\n    .timeout(timeout)\n}\n  const findAll = () => knex.select(selectableProps)\n    .from(tableName)\n    .timeout(timeout)\n\n  const find = filters => knex.select(selectableProps)\n    .from(tableName)\n    .where(filters)\n    .timeout(timeout)\n\n  // Same as `find` but only returns the first match if >1 are found.\n  const findOne = filters => find(filters)\n    .then(results => {\n      if (!Array.isArray(results)) return results\n\n      return results[0]\n    })\n\n  const findById = id => knex.select(selectableProps)\n    .from(tableName)\n    .where({ id })\n    .timeout(timeout)\n\n  const update = (id, props) => {\n    delete props.id // not allowed to set `id`\n\n    return knex.update(props)\n      .from(tableName)\n      .where({ id })\n      .returning(selectableProps)\n      .timeout(timeout)\n  }\n\n  const destroy = id => knex.del()\n    .from(tableName)\n    .where({ id })\n    .timeout(timeout)\n\n  return {\n    name,\n    tableName,\n    selectableProps,\n    timeout,\n    create,\n    findAll,\n    find,\n    findOne,\n    findById,\n    update,\n    destroy,\n    queryBuilder,\n    paginateQuery,\n    filteredQueryBuilder,\n    rawQueryBuilder\n  }\n}\n"],"file":"model-guts.js"}