{"version":3,"sources":["../../../app/helpers/helpers.js"],"names":["ApiError","message","status","error","Error","dataGet","data","key","fallback","keysInOrder","split","dataIterator","currentKey","shift","undefined","Object","prototype","hasOwnProperty","call","extractFilters","queryParams","allowedFilters","appliedFilters","keys","map","f","indexOf","length","transformResponseToCoreStyle","result","showTotalCount","paginator","meta","pageNumber","page","dataLength","totalCount","total","wrap","func","req","res","next"],"mappings":"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","sourcesContent":["    const ApiError = function(message,status = 400){\n        const error = new Error(message)\n        error.status = status\n        return error;\n    }\n    \n    const dataGet = async function(data,key,fallback = null){\n        let keysInOrder = key.split(\".\");\n        \n        let dataIterator = data;\n        let currentKey = keysInOrder.shift();\n\n        while(currentKey !== undefined){\n            if(Object.prototype.hasOwnProperty.call(dataIterator,currentKey)){\n                dataIterator = dataIterator[currentKey]\n                currentKey = keysInOrder.shift();\n            }\n            else {\n                return fallback;\n            }\n        }\n        return dataIterator;\n    }\n\n    const extractFilters = function(queryParams,allowedFilters){\n        // const allowedFilters = ['status','batch_number','campaign_code'];\n        let appliedFilters = [];\n\n        Object.keys(queryParams).map((f) => {\n            if(allowedFilters.indexOf(f) != -1){\n            appliedFilters[f] = queryParams[f]\n            }\n        })\n\n        if(Object.keys(appliedFilters).length === 0){\n            throw ApiError(\"At least one filter parameter is required\",400); \n\n            // return res.status(400).json({\n            //     success: false,\n            //     message: \"At least one filter parameter is required\"\n            //     })\n    \n        }\n\n        return appliedFilters;\n    }\n\n    const transformResponseToCoreStyle = function(result,showTotalCount = false){\n\n        let data = {\n            error: false,\n            data: result.data ? result.data : result\n        }\n\n        if(result.paginator){\n            data.meta = {\n                pageNumber: result.paginator.page,\n                dataLength: result.paginator.dataLength\n            };\n    \n            if(showTotalCount){\n                data.meta.totalCount = result.paginator.total\n            }\n        }\n        \n\n        return data;\n    }\n\n    /**\n     * Wrap route function for errors\n     * @param  {function} func controller function to be listened for errors\n     * @return {void}\n    */\n    const wrap = function(func) {\n        return async function (req, res, next) {\n            try {\n                return await func(req, res, next);\n            } catch (err) {\n                next(err);\n            }\n        };\n    }\n\n    export {transformResponseToCoreStyle,dataGet,extractFilters,wrap,ApiError}"],"file":"helpers.js"}