{"version":3,"sources":["../../../../app/controllers/v1/sc_controller.js"],"names":["require","transformResponseToCoreStyle","extractFilters","ApiError","isValidCard","cardno","length","e","Error","status","lockCardTemporarily","req","res","params","card_no","cardKey","redis","getAsync","isLocked","setAsync","json","error","message","unlockCard","delAsync","result","module","exports"],"mappings":"AAAA,a,CAEA;;;;;;;;;;AAIA;;eAHiEA,OAAO,CAAC,uBAAD,C;IAAhEC,4B,YAAAA,4B;IAA6BC,c,YAAAA,c;IAAeC,Q,YAAAA,Q,EAEpD;;;AAIA,SAASC,WAAT,CAAqBC,MAArB,EAA4B;AAC1B,MAAGA,MAAM,CAACC,MAAP,KAAkB,EAArB,EAAwB;AACtB,QAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,oBAAV,CAAR;AACAD,IAAAA,CAAC,CAACE,MAAF,GAAW,GAAX;AACA,UAAMF,CAAN;AACD;AACF;;AAED,IAAMG,mBAAmB;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAG,iBAAeC,GAAf,EAAoBC,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AACtBP,YAAAA,MADsB,GACbM,GAAG,CAACE,MAAJ,CAAWC,OADE;AAE1BV,YAAAA,WAAW,CAACC,MAAD,CAAX;AAEMU,YAAAA,OAJoB,GAIV,aAAWV,MAJD;AAAA;AAAA,mBAMLW,kBAAMC,QAAN,CAAeF,OAAf,CANK;;AAAA;AAMtBG,YAAAA,QANsB;;AAAA,iBAOvBA,QAPuB;AAAA;AAAA;AAAA;;AAAA,kBAQlBf,QAAQ,CAAC,mEAAD,EAAqE,GAArE,CARU;;AAAA;AAWxBe,YAAAA,QAAQ,GAAGF,kBAAMG,QAAN,CAAeJ,OAAf,EAAuB,IAAvB,CAAX;;AAXwB;AAAA,iBAcvBG,QAduB;AAAA;AAAA;AAAA;;AAexBN,YAAAA,GAAG,CAACQ,IAAJ,CAAS;AACPC,cAAAA,KAAK,EAAE,KADA;AAEPC,cAAAA,OAAO,EAAE;AAFF,aAAT;AAfwB;AAAA;;AAAA;AAAA,kBAqBlBnB,QAAQ,CAAC,8BAAD,EAAgC,GAAhC,CArBU;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAnBO,mBAAmB;AAAA;AAAA;AAAA,GAAzB;;AAyBA,IAAMa,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAG,kBAAeZ,GAAf,EAAoBC,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AACbP,YAAAA,MADa,GACJM,GAAG,CAACE,MAAJ,CAAWC,OADP;AAEjBV,YAAAA,WAAW,CAACC,MAAD,CAAX;AAEMU,YAAAA,OAJW,GAID,aAAWV,MAJV;AAAA;AAAA,mBAKIW,kBAAMQ,QAAN,CAAeT,OAAf,CALJ;;AAAA;AAKXU,YAAAA,MALW;;AAAA,iBAOdA,MAPc;AAAA;AAAA;AAAA;;AAAA,8CAQRb,GAAG,CAACQ,IAAJ,CAAS;AACdC,cAAAA,KAAK,EAAEI,MADO;AAEdH,cAAAA,OAAO,EAAE;AAFK,aAAT,CARQ;;AAAA;AAAA,kBAcTnB,QAAQ,CAAC,4BAAD,EAA8B,GAA9B,CAdC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAVoB,UAAU;AAAA;AAAA;AAAA,GAAhB;;AAmBAG,MAAM,CAACC,OAAP,GAAiB;AACfjB,EAAAA,mBAAmB,EAAnBA,mBADe;AAEfa,EAAAA,UAAU,EAAVA;AAFe,CAAjB","sourcesContent":["'use strict'\n\n// const { Scratchcard, Project } = require('../models')\nconst { transformResponseToCoreStyle,extractFilters,ApiError } = require(\"../../helpers/helpers\")\n\n// const knex = require('../../config/database')\nimport redis  from \"../../redis\";\n\n\nfunction isValidCard(cardno){\n  if(cardno.length !== 12){\n    let e = new Error('Card no is invalid');\n    e.status = 422;\n    throw e;\n  }\n}\n\nconst lockCardTemporarily = async function(req, res){\n  let cardno = req.params.card_no;\n  isValidCard(cardno);\n\n  const cardKey = 'lock:sc:'+cardno;\n\n  let isLocked = await redis.getAsync(cardKey)\n  if(isLocked){\n    throw ApiError(\"Sorry, Card is being used at the moment and it is already locked!\",409);\n  }\n  else {\n    isLocked = redis.setAsync(cardKey,true);\n  }\n\n  if(isLocked){\n    res.json({\n      error: false,\n      message: \"Card has been locked.\"\n    });\n  }\n  else {\n    throw ApiError(\"Sorry, failed to lock card'!\",500);\n  }\n}\n\nconst unlockCard = async function(req, res){\n  let cardno = req.params.card_no;\n  isValidCard(cardno);\n\n  const cardKey = 'lock:sc:'+cardno;\n  const result = await redis.delAsync(cardKey);\n\n  if(result){\n    return res.json({\n      error: result,\n      message: \"Card has been unlocked.\"\n    });\n  }\n  else {\n    throw ApiError(\"Card was already unlocked!\",422);\n  }\n\n}\n\nmodule.exports = {\n  lockCardTemporarily,\n  unlockCard\n}\n"],"file":"sc_controller.js"}