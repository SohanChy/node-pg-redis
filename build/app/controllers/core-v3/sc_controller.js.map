{"version":3,"sources":["../../../../app/controllers/core-v3/sc_controller.js"],"names":["require","Scratchcard","Project","transformResponseToCoreStyle","extractFilters","knex","getCards","req","res","next","appliedFilters","query","qb","filteredQueryBuilder","paginateQuery","scs","json","checkCard","first","error","data","getInventory","queryBuilder","cond","retailernumber","whereRaw","getRetailerSales","filter","inventory_status","rawQueryBuilder","select","raw","leftJoin","params","orderBy","getInventoryStatusBySerial","where","serial_no","postProjects","userId","id","props","body","project","create","user_id","then","ok","message","getProjects","findAll","projects","getProject","projectId","findById","putProject","update","deleteProject","destroy","deleteCount","module","exports"],"mappings":"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","sourcesContent":["'use strict'\n\nconst { Scratchcard, Project } = require('../../models')\nconst { transformResponseToCoreStyle,extractFilters } = require(\"../../helpers/helpers\")\nconst knex = require('../../../config/database')\n\n/**\n * get scratch cards using filters \n */\nexport async function getCards(req, res, next){\n  const appliedFilters = extractFilters(req.query,['status','batch_number','campaign_code']);\n\n  let qb = Scratchcard.filteredQueryBuilder(appliedFilters);\n  const scs = await Scratchcard.paginateQuery(qb,req.query)\n              .catch(next);\n\n  return res.json(transformResponseToCoreStyle(scs));\n}\n\nexport async function checkCard(req, res, next){\n  const appliedFilters = extractFilters(req.query,['serial_no','card_no']);\n\n  let qb = Scratchcard.filteredQueryBuilder(appliedFilters);\n  const scs = await qb.first().catch(next);\n\n  return res.json({\n    error: false,\n    data: scs\n  });\n}\n\n/**\n * GET scratch cards inventory\n * Note that it will only return the cards which are not SOLD by retailers, Not used and Active\n */\nexport async function getInventory(req, res, next){\n\n  let qb = Scratchcard.queryBuilder(['campaign_code','serial_no','added_on','inventory_info']);\n\n  let cond = `status = 'Active' AND (inventory_info->>'inventory_status'='WITH_RETAILER' OR inventory_info->>'inventory_status'='IN_INVENTORY') `;\n  if(req.query.retailernumber){\n    cond = cond + ` AND inventory_info->>'retailernumber'='${req.query.retailernumber}'`;\n  }\n  qb.whereRaw(cond);\n  \n  const scs = await Scratchcard.paginateQuery(qb,req.query)\n              .catch(next);\n\n  return res.json(transformResponseToCoreStyle(scs));\n}\n\n/**\n * GET scratch cards statuses which has been assigned to a specific retailer\n */\n\nexport async function getRetailerSales(req, res, next){\n\n  let filter = '';\n  if(req.query.inventory_status){\n    filter = `AND inventory_info->>'inventory_status'='${req.query.inventory_status}'`;\n  }\n\n  let qb = Scratchcard.rawQueryBuilder();\n  qb.select(knex.raw('scratch_card.campaign_code, serial_no, campaigns.charge_amount charge_amount, inventory_info'))\n      .leftJoin('campaigns', 'campaigns.campaign_code', 'scratch_card.campaign_code')\n      .whereRaw(`inventory_info->>'retailernumber'='${req.params.retailernumber}' ${filter}`)\n      .orderBy('scratch_card.id','asc');\n    \n  const scs = await Scratchcard.paginateQuery(qb,req.query,true).catch(next);\n\n  return res.json(transformResponseToCoreStyle(scs,true));\n}\n\n\n/**\n * GET inventory status of a card by serial number\n */\n\nexport async function getInventoryStatusBySerial(req, res, next){\n  let qb = Scratchcard.rawQueryBuilder();\n  qb.select('scratch_card.campaign_code','scratch_card.serial_no','scratch_card.status','campaigns.charge_amount','scratch_card.added_on','scratch_card.inventory_info')\n  .where('serial_no', req.params.serial_no)\n  .leftJoin('campaigns', 'scratch_card.campaign_code', 'campaigns.campaign_code');\n\n  const scs = await qb.first()\n              .catch(next);\n\n  return res.json(transformResponseToCoreStyle(scs));\n}\n\nconst postProjects = (req, res, next) => {\n  const userId = req.params.id\n  const props = req.body.project\n\n  Project.create({ ...props, user_id: userId })\n    .then(project => res.json({\n      ok: true,\n      message: 'Project created',\n      project,\n      userId\n    }))\n    .catch(next)\n}\n\nconst getProjects = (req, res, next) => {\n  const userId = req.params.id\n\n  Project.findAll()\n    .then(projects => res.json({\n      ok: true,\n      message: 'Projects found',\n      projects,\n      userId\n    }))\n    .catch(next)\n}\n\nconst getProject = (req, res, next) => {\n  const projectId = req.params.id\n\n  Project.findById(projectId)\n    .then(project => res.json({\n      ok: true,\n      message: 'Project found',\n      project\n    }))\n    .catch(next)\n}\n\nconst putProject = (req, res, next) => {\n  const projectId = req.params.id\n  const props = req.body.project\n\n  Project.update(projectId, props)\n    .then(project => res.json({\n      ok: true,\n      message: 'Project updated',\n      project\n    }))\n    .catch(next)\n}\n\nconst deleteProject = (req, res, next) => {\n  const projectId = req.params.id\n\n  Project.destroy(projectId)\n    .then(deleteCount => res.json({\n      ok: true,\n      message: 'Project deleted',\n      deleteCount\n    }))\n    .catch(next)\n}\n\nmodule.exports = {\n  postProjects,\n  getProjects,\n  getProject,\n  putProject,\n  deleteProject,\n  getCards,\n  checkCard,\n  getInventory,\n  getRetailerSales,\n  getInventoryStatusBySerial\n}\n"],"file":"sc_controller.js"}